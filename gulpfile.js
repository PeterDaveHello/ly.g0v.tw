// Generated by LiveScript 1.2.0
var child_process, async, gulp, gutil, ref$, protractor, webdriver, webdriverPath, webdriverProcess, standaloneSeleniumPid, webdriverUpdate, webdriverStart;
child_process = require('child_process');
async = require('async');
gulp = require('gulp');
gutil = require('gulp-util');
ref$ = require('gulp-protractor'), protractor = ref$.protractor, webdriver = ref$.webdriver;
webdriverPath = './node_modules/.bin/webdriver-manager';
webdriverUpdate = function(cb){
  gutil.log("updating webdriver");
  return child_process.spawn(webdriverPath, ['update']).once('close', function(){
    gutil.log("webdriver-update complete");
    return cb();
  });
};
webdriverStart = function(cb){
  webdriverProcess = child_process.spawn(webdriverPath, ['start'], {
    stdio: ['ignore', 'pipe', 'ignore']
  });
  webdriverProcess.once('close', function(){
    return gutil.log("webdriver-start complete");
  });
  return webdriverProcess.stdout.on('data', function(it){
    var that;
    if (that = /seleniumProcess.pid: (\d+)/.exec(it.toString())) {
      standaloneSeleniumPid = that[1];
      gutil.log("Selenium Process ID: " + that[1]);
    }
    if (/Started org.openqa.jetty.jetty.Server/.exec(it.toString())) {
      webdriverProcess.unref();
      gutil.log('webdriver up');
      return cb();
    }
  });
};
webdriver = function(cb){
  return async.series([webdriverUpdate, webdriverStart], cb);
};
gulp.task('webdriver', webdriver);
gulp.task('protractor', ['webdriver'], function(){
  return gulp.src(["./test/e2e/app/*.ls"]).pipe(protractor({
    configFile: "./test/protractor.conf.ls"
  }));
});
gulp.task('default', ['protractor'], function(){
  gutil.log("Kill Selenium (" + standaloneSeleniumPid + ")");
  return process.kill(standaloneSeleniumPid);
});